       





        
            checkcaller = checkcaller
newcclosure = newcclosure
hookmetamethod = hookmetamethod

local PastedSources = false
local BruhXD = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Bullshit = LocalPlayer:GetMouse()

local XYZ1 = 0
local XYZ2 = 0
local XYZ3 = 0

local Hip = 0
local c = 0

function RandomNumberRange(a)
    return math.random(-a * 100, a * 100) / 100
end

function RandomVectorRange(a, b, c)
    return Vector3.new(RandomNumberRange(a), RandomNumberRange(b), RandomNumberRange(c))
end


local DesyncTypes = {}
BruhXD.Heartbeat:Connect(function()
    if PastedSources == true then
        DesyncTypes[1] = LocalPlayer.Character.HumanoidRootPart.CFrame
        DesyncTypes[2] = LocalPlayer.Character.HumanoidRootPart.AssemblyLinearVelocity

        local SpoofThis = LocalPlayer.Character.HumanoidRootPart.CFrame

        SpoofThis = SpoofThis * CFrame.new(Vector3.new(0, 0, 0))
        SpoofThis = SpoofThis * CFrame.Angles(math.rad(RandomNumberRange(XYZ1)), math.rad(RandomNumberRange(XYZ2)), math.rad(RandomNumberRange(XYZ3)))

        LocalPlayer.Character.HumanoidRootPart.CFrame = SpoofThis

        LocalPlayer.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(1, 1, 1) * 16384

        BruhXD.RenderStepped:Wait()

        LocalPlayer.Character.HumanoidRootPart.CFrame = DesyncTypes[1]
        LocalPlayer.Character.HumanoidRootPart.AssemblyLinearVelocity = DesyncTypes[2]
    end
end)


--// Hook_CFrame
local XDDDDDD = nil
XDDDDDD = hookmetamethod(game, "__index", newcclosure(function(self, key)
    if PastedSources == true then
        if not checkcaller() then
            if key == "CFrame" and PastedSources == true and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character:FindFirstChild("Humanoid") and LocalPlayer.Character:FindFirstChild("Humanoid").Health > 0 then
                if self == LocalPlayer.Character.HumanoidRootPart then
                    return DesyncTypes[1] or CFrame.new()
                elseif self == LocalPlayer.Character.Head then
                    return DesyncTypes[1] and DesyncTypes[1] + Vector3.new(0, LocalPlayer.Character.HumanoidRootPart.Size / 2 + 0.5, 0) or CFrame.new()
                end
            end
        end
    end
    return XDDDDDD(self, key)
end))
            

            
            --aa
            


-- da hood private silent aim
local Aiming = loadstring(game:HttpGet("https://raw.githubusercontent.com/ZenXTheMen/sdgyusadsad/main/sas",true))()
Aiming.TeamCheck(false)

local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CurrentCamera = Workspace.CurrentCamera

local DaHoodSettings = {
    SilentAim = false,
    AimLock = false,
    Prediction = 0.11,
    AimLockKeybind = Enum.KeyCode.E
}
getgenv().DaHoodSettings = DaHoodSettings

function Aiming.Check()
    if not (Aiming.Enabled == true and Aiming.Selected ~= LocalPlayer and Aiming.SelectedPart ~= nil) then
        return false
    end

    local Character = Aiming.Character(Aiming.Selected)
    local KOd = Character:WaitForChild("BodyEffects")["K.O"].Value
    local Grabbed = Character:FindFirstChild("GRABBING_CONSTRAINT") ~= nil

    if (KOd or Grabbed) then
        return false
    end

    return true
end

local __index
__index = hookmetamethod(game, "__index", function(t, k)
    if (t:IsA("Mouse") and (k == "Hit" or k == "Target") and Aiming.Check()) then
        local SelectedPart = Aiming.SelectedPart

        if (DaHoodSettings.SilentAim and (k == "Hit" or k == "Target")) then
            local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)

            return (k == "Hit" and Hit or SelectedPart)
        end
    end

    return __index(t, k)
end)

RunService:BindToRenderStep("AimLock", 0, function()
    if (DaHoodSettings.AimLock and Aiming.Check() and UserInputService:IsKeyDown(DaHoodSettings.AimLockKeybind)) then
        local SelectedPart = Aiming.SelectedPart

        local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)

        CurrentCamera.CFrame = CFrame.lookAt(CurrentCamera.CFrame.Position, Hit.Position)
    end
    end)




 getgenv().OldAimPart = "HumanoidRootPart"
getgenv().AimPart = "HumanoidRootPart"
getgenv().AimlockKey = ""
getgenv().AimRadius = 99
getgenv().ThirdPerson = true
getgenv().FirstPerson = true
getgenv().TeamCheck = false
getgenv().PredictMovement = true 
getgenv().PredictionVelocity = 9.6
getgenv().CheckIfJumped = true
getgenv().Smoothness = false
getgenv().SmoothnessAmount = 0.0365
getgenv().lockautosetup = false
getgenv().airshotbonee = "RightFoot"
local Players, Uis, RService, SGui =
    game:GetService "Players",
    game:GetService "UserInputService",
    game:GetService "RunService",
    game:GetService "StarterGui"
local Client, Mouse, Camera, CF, RNew, Vec3, Vec2 =
    Players.LocalPlayer,
    Players.LocalPlayer:GetMouse(),
    workspace.CurrentCamera,
    CFrame.new,
    Ray.new,
    Vector3.new,
    Vector2.new
local Aimlock, MousePressed, CanNotify = false, false, false
local AimlockTarget
local OldPre

getgenv().WorldToViewportPoint = function(P)
    return Camera:WorldToViewportPoint(P)
end

getgenv().WorldToScreenPoint = function(P)
    return Camera.WorldToScreenPoint(Camera, P)
end

getgenv().GetObscuringObjects = function(T)
    if T and T:FindFirstChild(getgenv().AimPart) and Client and Client.Character:FindFirstChild("Head") then
        local RayPos = workspace:FindPartOnRay(RNew(T[getgenv().AimPart].Position, Client.Character.Head.Position))
        if RayPos then
            return RayPos:IsDescendantOf(T)
        end
    end
end

getgenv().GetNearestTarget = function()
    local players = {}
    local PLAYER_HOLD = {}
    local DISTANCES = {}
    for i, v in pairs(Players:GetPlayers()) do
        if v ~= Client then
            table.insert(players, v)
        end
    end
    for i, v in pairs(players) do
        if v.Character ~= nil then
            local AIM = v.Character:FindFirstChild("Head")
            if getgenv().TeamCheck == true and v.Team ~= Client.Team then
                local DISTANCE =
                    (v.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
                local RAY =
                    Ray.new(
                    game.Workspace.CurrentCamera.CFrame.p,
                    (Mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * DISTANCE
                )
                local HIT, POS = game.Workspace:FindPartOnRay(RAY, game.Workspace)
                local DIFF = math.floor((POS - AIM.Position).magnitude)
                PLAYER_HOLD[v.Name .. i] = {}
                PLAYER_HOLD[v.Name .. i].dist = DISTANCE
                PLAYER_HOLD[v.Name .. i].plr = v
                PLAYER_HOLD[v.Name .. i].diff = DIFF
                table.insert(DISTANCES, DIFF)
            elseif getgenv().TeamCheck == false and v.Team == Client.Team then
                local DISTANCE =
                    (v.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
                local RAY =
                    Ray.new(
                    game.Workspace.CurrentCamera.CFrame.p,
                    (Mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * DISTANCE
                )
                local HIT, POS = game.Workspace:FindPartOnRay(RAY, game.Workspace)
                local DIFF = math.floor((POS - AIM.Position).magnitude)
                PLAYER_HOLD[v.Name .. i] = {}
                PLAYER_HOLD[v.Name .. i].dist = DISTANCE
                PLAYER_HOLD[v.Name .. i].plr = v
                PLAYER_HOLD[v.Name .. i].diff = DIFF
                table.insert(DISTANCES, DIFF)
            end
        end
    end

    if unpack(DISTANCES) == nil then
        return nil
    end

    local L_DISTANCE = math.floor(math.min(unpack(DISTANCES)))
    if L_DISTANCE > getgenv().AimRadius then
        return nil
    end

    for i, v in pairs(PLAYER_HOLD) do
        if v.diff == L_DISTANCE then
            return v.plr
        end
    end
    return nil
end

Mouse.KeyDown:Connect(
    function(a)
        if not (Uis:GetFocusedTextBox()) then
            if a == AimlockKey and AimlockTarget == nil then
                pcall(
                    function()
                        if MousePressed ~= true then
                            MousePressed = true
                        end
                        local Target
                        Target = GetNearestTarget()
                        if Target ~= nil then
                            AimlockTarget = Target
                        end
                    end
                )
            elseif a == AimlockKey and AimlockTarget ~= nil then
                if AimlockTarget ~= nil then
                    AimlockTarget = nil
                end
                if MousePressed ~= false then
                    MousePressed = false
                end
            end
        end
    end
)






getgenv().Sexy = false
getgenv().Bitch = 1

game:GetService"RunService".RenderStepped:Connect(function()
        if getgenv().Sexy == true then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * 
        CFrame.new(
        math.random(1, 2) == 1 and getgenv().Bitch or -getgenv().Bitch, 0, 0
        )
        end
end)






   






            --------- ui lib ---
            local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/ZenXTheMen/dsadadsas/main/wa"))()
            local window = library:new({textsize = 14.5,font = Enum.Font.RobotoMono,name = "Zeus.Gay | Foot Smeller | Rewrite",color = Color3.fromRGB(112, 8, 2)})










            --- tabs --- 
            local a = window:page({name = "Aiming"})
            local v = window:page({name = "Visuals"})
            local aa = window:page({name = "Anti-Aim"})
            local m = window:page({name = "Misc"})












            ----sections--------
            local tg = a:section({name = "Target-Aim",side = "left",size = 330})
            local cl = a:section({name = "Camlock",side = "right",size = 310})
            local sa = a:section({name = "Silent-Aim",side = "left",size = 230})
            local vs = v:section({name = "ESP",side = "Left",size = 230})
            local aa1 = aa:section({name = "Anti-Aim",side = "left",size = 90})
            local aa3 = aa:section({name = "Confusion-AA",side = "left",size = 90})
            local aa2 = aa:section({name = "Desync-AA",side = "Right",size = 140})
            local m1 = m:section({name = "Misc1",side = "left",size = 150})
            local m2 = m:section({name = "Misc2",side = "Right",size = 80})
            local m3 = m:section({name = "Tp to player",side = "left",size = 90})






















            -------target aim-------
            
            
            tg:button({name = "Target-Aim (Q)",callback = function()

 getgenv().Target = true

    getgenv().Key = Enum.KeyCode.Q
    getgenv().Prediction = 0.121
    getgenv().ChatMode = false
    getgenv().NotifMode = false
    getgenv().PartMode = true
    getgenv().AirshotFunccc = false
    getgenv().Partz = "HumanoidRootPart"
    getgenv().AutoPrediction = false



    _G.Types = {
        Ball = Enum.PartType.Ball,
        Block = Enum.PartType.Block, 
        Cylinder = Enum.PartType.Cylinder
    }
          
    


    local Tracer = Instance.new("Part", game.Workspace)
    Tracer.Name = "gay"	
    Tracer.Anchored = true		
    Tracer.CanCollide = false
    Tracer.Transparency = 0
    Tracer.Parent = game.Workspace	
    Tracer.Shape = _G.Types.Ball
    Tracer.Material = Enum.Material.ForceField
    Tracer.Size = Vector3.new(14,14,14)
    Tracer.Color = Color3.fromRGB(222,4,4)
    



    --
    local plr = game.Players.LocalPlayer
    local mouse = plr:GetMouse()
    local Runserv = game:GetService("RunService")




    circle = Drawing.new("Circle")
    circle.Color = Color3.fromRGB(255,255,255)
    circle.Thickness = 0
    circle.NumSides = 732
    circle.Radius = 120
    circle.Thickness = 0
    circle.Transparency = 1
    circle.Visible = false
    circle.Filled = false





    Runserv.RenderStepped:Connect(function()
        circle.Position = Vector2.new(mouse.X,mouse.Y+35)
    end)
    




    local guimain = Instance.new("Folder", game.CoreGui)
    local CC = game:GetService"Workspace".CurrentCamera
    local LocalMouse = game.Players.LocalPlayer:GetMouse()
    local Locking = false
    
    	
    --
    if getgenv().sexy == true then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Zeus",
                Text = "Already Loaded!",
                Duration = 5
            })
        return
    end
    
    getgenv().sexy = false
    
    local UserInputService = game:GetService("UserInputService")

    UserInputService.InputBegan:Connect(function(keygo,ok)
           if (not ok) then
           if (keygo.KeyCode == getgenv().Key) then
               if getgenv().Target == true then
               Locking = not Locking
               
               if Locking then
               Plr =  getClosestPlayerToCursor()
                if getgenv().ChatMode then
                    local A_1 = "Target: "..tostring(Plr.Character.Humanoid.DisplayName) local A_2 = "All" local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest Event:FireServer(A_1, A_2) 
        	    end	
                if getgenv().NotifMode then
    			    game.StarterGui:SetCore("SendNotification", {
                        Title = "";
                        Text = "Target: "..tostring(Plr.Character.Humanoid.DisplayName);
    
                    })
                end


                getgenv().Strafe = false

                getgenv().StrafeSpeed = 0.6
        
                getgenv().StrafeLength = 10
                
                
                if Strafe == true then
                    spawn(function()
                                    -- uwu dev forums
                                    repeat
                                        task.wait()
        
                            for i = 0, 360, StrafeSpeed do
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                    CFrame.new(Plr.Character.HumanoidRootPart.Position) *
                                    CFrame.Angles(0, math.rad(i), 0) *
                                    CFrame.new(StrafeLength, 0, 0)
                                task.wait()
                            end
                        until Plr.Character.Humanoid.health < 1 or
                                not Locking or
                            Strafe == false
                end
            )
        end








    elseif not Locking then
            if getgenv().ChatMode then
                local A_1 = "Unlocked!" local A_2 = "All" local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest Event:FireServer(A_1, A_2) 
        	end	
            getgenv().Strafe = false
        if getgenv().NotifMode then
                game.StarterGui:SetCore("SendNotification", {
                   Title = "",
                   Text = "Unlocked",
                   Duration = 5
               })
           elseif getgenv().Target == false then
                game.StarterGui:SetCore("SendNotification", {
                   Title = "",
                   Text = "Target isn't enabled",
                   Duration = 5
     
                })
            end
        end 
    end  
end
end
end)
	
	function getClosestPlayerToCursor()
		local closestPlayer
		local shortestDistance = circle.Radius

		for i, v in pairs(game.Players:GetPlayers()) do
			if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("LowerTorso") then
				local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position)
				local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(LocalMouse.X, LocalMouse.Y)).magnitude
				if magnitude < shortestDistance then
					closestPlayer = v
					shortestDistance = magnitude
				end
			end
		end
		return closestPlayer
	end
--
if getgenv().PartMode then
	game:GetService"RunService".Stepped:connect(function()
		if Locking and Plr.Character and Plr.Character:FindFirstChild("LowerTorso") then
			Tracer.CFrame = CFrame.new(Plr.Character.LowerTorso.Position+(Plr.Character.LowerTorso.Velocity*Prediction))
		else
			Tracer.CFrame = CFrame.new(0, 9999, 0)

		end
	end)
end

    
    
    --
	local rawmetatable = getrawmetatable(game)
	local old = rawmetatable.__namecall
	setreadonly(rawmetatable, false)
	rawmetatable.__namecall = newcclosure(function(...)
		local args = {...}
		if Locking and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" then
			args[3] = Plr.Character[getgenv().Partz].Position+(Plr.Character[getgenv().Partz].Velocity*Prediction)
			return old(unpack(args))
		end
		return old(...)
	end)


if getgenv().AirshotFunccc == true then
            if Plr.Character.Humanoid.Jump == true and Plr.Character.Humanoid.FloorMaterial == Enum.Material.Air then
                getgenv().Partz = "RightFoot"
            else
                Plr.Character:WaitForChild("Humanoid").StateChanged:Connect(function(old,new)
                    if new == Enum.HumanoidStateType.Freefall then
                    getgenv().Partz = "RightFoot"
                    else
                        getgenv().Partz = "LowerTorso"
                    end
                end)
            end
end
---
	while wait() do
        if getgenv().AutoPrediction == true then
            local pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
            local split = string.split(pingvalue,'(')
            local ping = tonumber(split[1])
            if ping < 130 then
                getgenv().Prediction = 0.151
            elseif ping < 125 then
                getgenv().Prediction = 0.149
            elseif ping < 110 then
                getgenv().Prediction = 0.146
            elseif ping < 105 then
                getgenv().Prediction = 0.138
            elseif ping < 90 then
                getgenv().Prediction = 0.136
            elseif ping < 80 then
                getgenv().Prediction = 0.134
            elseif ping < 70 then
                getgenv().Prediction = 0.131
            elseif ping < 60 then
                getgenv().Prediction = 0.1229
            elseif ping < 50 then
                getgenv().Prediction = 0.1225
            elseif ping < 40 then
                getgenv().Prediction = 0.1256
            end
        end
        end
end
end
            end})
            tg:textbox({name = "Input Prediction",def = "0.142",placeholder = "input prediction for the target aim.",callback = function(bool)
                getgenv().PredictionVelocity = bool
            end})
            tg:toggle({name = "Airshot Function",def = false,callback = function(bool)
                getgenv().AirshotFunccc = bool
            end})
            tg:toggle({name = "NotifMode",def = false,callback = function(bool)
                getgenv().Notify = bool
            end})
            tg:dropdown({name = "AimPart",def = "HumanoidRootPart",max = 1,options = {"Head","UpperTorso","HumanoidRootPart","LowerTorso"},callback = function(part)
                getgenv().Partz = part
            end})
tg:button({name = "Resolver",callback = function()
     local RunService = game:GetService("RunService")

RunService.Heartbeat:Connect(function()
    pcall(function()
        for i,v in pairs(game.Players:GetChildren()) do
            if v.Name ~= game.Players.LocalPlayer.Name then
                local hrp = v.Character.HumanoidRootPart
                hrp.Velocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)    
                hrp.AssemblyLinearVelocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)   
            end
        end
    end)
end)
end})
            tg:toggle({name = "Auto Prediction",def = false,callback = function(bool)
                getgenv().AutoPrediction = bool
            end})
            tg:toggle({name = "Target-Strafe",def = false,callback = function(bool)
                Strafe = bool
            end})
            tg:slider({name = "Strafe Speed",def = 0.6, max = 100,min = 1,rounding = true,ticking = false,measuring = "",callback = function(s)
                StrafeSpeed = s
            end})
            tg:slider({name = "Strafe Length",def = 10, max = 50,min = 1,rounding = true,ticking = false,measuring = "",callback = function(s)
                StrafeLength = s
            end})











































            ----------camlock-
            cl:toggle({name = "Toggle Camlock",def = false,callback = function(bool)
                aimlock = bool
            end})
            cl:textbox({name = "change key",def = "",placeholder = "Enter key",callback = function(bool)
                getgenv().AimlockKey = bool
            end})
            cl:textbox({name = "change prediction",def = "9.6",placeholder = "Enter pred",callback = function(bool)
                getgenv().PredictionVelocity = bool
            end})
            cl:toggle({name = "Smoothness",def = false,callback = function(bool)
                getgenv().Smoothness = bool
            end})
cl:button({name = "Resolver",callback = function()
     local RunService = game:GetService("RunService")

RunService.Heartbeat:Connect(function()
    pcall(function()
        for i,v in pairs(game.Players:GetChildren()) do
            if v.Name ~= game.Players.LocalPlayer.Name then
                local hrp = v.Character.HumanoidRootPart
                hrp.Velocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)    
                hrp.AssemblyLinearVelocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)   
            end
        end
    end)
end)
end})
        cl:textbox({name = "Smoothness Amount",def = "0",placeholder = "Enter Smoothness Amount",callback = function(bool)
             getgenv().SmoothnessAmount = bool
        end})
        cl:toggle({name = "TeamCheck",def = false,callback = function(bool)
            getgenv().TeamCheck = bool
        end})
        cl:dropdown({name = "Aimpart",def = "Head",max = 4,options = {"Head","UpperTorso","HumanoidRootPart","LowerTorso"},callback = function(part)
            getgenv().AimPart = part
        end})
        cl:dropdown({name = "Airshot part",def = "RightFoot",max = 5,options = {"LowerTorso","UpperLeftLeg","UpperRightLeg","LeftFoot","RightFoot"},callback = function(part)
            getgenv().airshotbonee = part
        end})







































        -------silent aim---------------------------

    sa:toggle({name = "Silent Aim",def = false,callback = function(bool)
        DaHoodSettings.SilentAim = bool
    end})

    sa:toggle({name = "ShowFov",def = false,callback = function(bool)
        Aiming.ShowFOV = bool
    end})
    sa:dropdown({name = "Aimpart",def = "Head",max = 4,options = {"Head","UpperTorso","HumanoidRootPart","LowerTorso"},callback = function(part)
        Aiming.TargetPart = part
    end})
    sa:slider({name = "Fov Size",def = 0, max = 300,min = 0,rounding = true,ticking = false,measuring = "",callback = function(bool)
        Aiming.FOV = bool
    end})
    sa:textbox({name = " SilentAim Prediction",def = "0.11",placeholder = "Enter Pred",callback = function(bool)
        DaHoodSettings.Prediction = bool
    end})
        sa:slider({name = "Hitchance",def = 0, max = 100,min = 0,rounding = true,ticking = false,measuring = "",callback = function(bool)
        Aiming.HitChance = bool
    end})
sa:button({name = "Resolver",callback = function()
     local RunService = game:GetService("RunService")

RunService.Heartbeat:Connect(function()
    pcall(function()
        for i,v in pairs(game.Players:GetChildren()) do
            if v.Name ~= game.Players.LocalPlayer.Name then
                local hrp = v.Character.HumanoidRootPart
                hrp.Velocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)    
                hrp.AssemblyLinearVelocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)   
            end
        end
    end)
end)
end})
















local ESP = loadstring(game:HttpGet("https://pastebin.com/raw/U2HwmEyF"))()
vs:toggle({name = "ESP",def = false,callback = function(e)
     ESP.Enabled = e
end})
vs:toggle({name = "Boxes",def = false,callback = function(e)
     ESP.Boxes = e
end})
vs:toggle({name = "Tracers",def = false,callback = function(e)
     ESP.Tracers = e
end})
vs:toggle({name = "Names",def = false,callback = function(e)
     ESP.Names = e
end})
local picker1 = vs:colorpicker({name = "ESP Color",cpname = nil,def = Color3.fromRGB(255,255,255),callback = function(e)
     ESP.Color = e
end})
local picker2 = vs:colorpicker({name = "Tracer Color",cpname = nil,def = Color3.fromRGB(255,255,255),callback = function(ep)
     _G.TracerColor = ep
end})
vs:slider({name = "Tracer Transparency",def = 0, max = 10,min = 0.1,rounding = false,ticking = true,measuring = "",callback = function(e)
    _G.TracerTransparency = e
end})
vs:slider({name = "Tracer Transparency",def = 0, max = 10,min = 0.1,rounding = false,ticking = true,measuring = "",callback = function(e)
    _G.TracerThickness = e
end})














































        ------aa--------

aa1:button({name = "Anti-Lock",callback = function()
         getgenv().VelocityChanger = true
    getgenv().Velocity = Vector3.new(200,0,200)
    getgenv().Key = "z"


    local NotifyLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))()
    local Notify = NotifyLibrary.Notify


    --// main scapt | realkscapter... omg
    local Players     = game:GetService("Players")
    local RunService  = game:GetService("RunService")

    local LocalPlayer = Players.LocalPlayer
    local Character   = LocalPlayer.Character
    local RootPart    = Character:FindFirstChild("HumanoidRootPart")

    local Heartbeat, RStepped, Stepped = RunService.Heartbeat, RunService.RenderStepped, RunService.Stepped

    LocalPlayer.CharacterAdded:Connect(function(NewCharacter)
    Character = NewCharacter
    end)

    local RVelocity, YVelocity = nil, 0.1

    local player = game.Players.LocalPlayer
    local mouse = player:GetMouse()
    mouse.KeyDown:Connect(
        function(key)
            if key == getgenv().Key then
                if getgenv().VelocityChanger == false then
                    Notify({
                        Title = "AA",
                        Description = "ON",
                        Duration = 1.4
                        })
                    getgenv().VelocityChanger = true
                else
                    Notify({
                        Title = "AA",
                        Description = "OFF",
                        Duration = 1.4
                        })
                    getgenv().VelocityChanger = false
                end
            end
        end
    )

    while true do
    if VelocityChanger then
        --// this a dumb check asnilsadsa
        if (not RootPart) or (not RootPart.Parent) or (not RootPart.Parent.Parent) then
            RootPart = Character:FindFirstChild("HumanoidRootPart")
        else
            RVelocity = RootPart.Velocity
    
            RootPart.Velocity = type(Velocity) == "vector" and Velocity or Velocity(RVelocity)
        
            RStepped:wait()
        
            RootPart.Velocity = RVelocity
        end
    end
    
    Heartbeat:wait()
    end
end})



    aa1:textbox({name = "Change Bind",def = "z",placeholder = "big king kong anti locker",callback = function(bool)
        getgenv().Key = bool
    end})
































    ----desync------
aa2:toggle({name = "Desync",def = false,callback = function(state)
     if state == true then
        pcall(function()
           PastedSources = true
           Notify({
            Title = "Desync AA ON",
            Description = "Desync Is Now On",
            Duration = 3
          })
          end)
                  elseif state == false then
            PastedSources = false
            Notify({
                Title = "Desync AA OFF",
                Description = "Desync Is Now Off",
                Duration = 3
              })
        end
end})
aa2:slider({name = "X",def = 0, max = 100,min = 0,rounding = true,ticking = false,measuring = "",callback = function(s)
   XYZ1 = s
end})
aa2:slider({name = "Y",def = 0, max = 100,min = 0,rounding = true,ticking = false,measuring = "",callback = function(s)
   XYZ2 = s
end})
aa2:slider({name = "Z",def = 0, max = 100,min = 0,rounding = true,ticking = false,measuring = "",callback = function(s)
   XYZ3 = s
end})



















aa3:toggle({name = "Confusion-AA",def = false,callback = function(bool)
getgenv().Sexy = bool
end})




aa3:textbox({name = "Amount",def = "1",placeholder = "Enter Num",callback = function(bool)
     getgenv().Bitch = bool
end})




































--misc1--
m1:button({name = "Among Us(cs)",callback = function()
                     local Face = game.Players.LocalPlayer.Character.Head.face.Texture
    local Mesh = game.Players.LocalPlayer.Character.LowerTorso.MeshId
    local Size = game.Players.LocalPlayer.Character.LowerTorso.Size
    
    game.Players.LocalPlayer.Character.LeftHand.Transparency = 1
    game.Players.LocalPlayer.Character.RightHand.Transparency = 1
    game.Players.LocalPlayer.Character.RightUpperArm.Transparency = 1
    game.Players.LocalPlayer.Character.RightLowerArm.Transparency = 1
    game.Players.LocalPlayer.Character.LeftUpperArm.Transparency = 1
    game.Players.LocalPlayer.Character.LeftLowerArm.Transparency = 1
    game.Players.LocalPlayer.Character.UpperTorso.Transparency = 1
    game.Players.LocalPlayer.Character.Head.Transparency = 1
    game.Players.LocalPlayer.Character.RightUpperLeg.Transparency = 1
    game.Players.LocalPlayer.Character.RightLowerLeg.Transparency = 1
    game.Players.LocalPlayer.Character.LeftUpperLeg.Transparency = 1
    game.Players.LocalPlayer.Character.LeftLowerLeg.Transparency = 1
    game.Players.LocalPlayer.Character.LeftFoot.Transparency = 1
    game.Players.LocalPlayer.Character.RightFoot.Transparency = 1
    
    game.Players.LocalPlayer.Character.Animate:Destroy()
    game.Players.LocalPlayer.Character.Head.face.Transparency = 1
    game.Players.LocalPlayer.Character.LowerTorso.MeshId = "rbxassetid://7229922898"
    game.Players.LocalPlayer.Character.LowerTorso.Size = Vector3.new(0.3, 0.05, 0.15)
    
    	local function inTable(What, Table)
		for Index, Value in pairs(Table) do
			if What == Value then
				return true
			end
		end
		return false
	end

	local removingClasses = {
		"Accessory",
		"Pants",
		"Shirt",
	}

	for _, Instance in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
		if inTable(Instance.ClassName, removingClasses) or Instance.Name == "face" then
			Instance:Destroy()
		end
	end
    
    for i,v in next, game:GetService('Players').LocalPlayer.Character:GetChildren() do
       if v:IsA('Accessory') then
           v:Destroy()
       end
    end
end})
m1:button({name = "Russia Repair House(cs)",callback = function()
                                     local Face = game.Players.LocalPlayer.Character.Head.face.Texture
    local Mesh = game.Players.LocalPlayer.Character.LowerTorso.MeshId
    local Size = game.Players.LocalPlayer.Character.LowerTorso.Size
    
    game.Players.LocalPlayer.Character.LeftHand.Transparency = 1
    game.Players.LocalPlayer.Character.RightHand.Transparency = 1
    game.Players.LocalPlayer.Character.RightUpperArm.Transparency = 1
    game.Players.LocalPlayer.Character.RightLowerArm.Transparency = 1
    game.Players.LocalPlayer.Character.LeftUpperArm.Transparency = 1
    game.Players.LocalPlayer.Character.LeftLowerArm.Transparency = 1
    game.Players.LocalPlayer.Character.UpperTorso.Transparency = 1
    game.Players.LocalPlayer.Character.Head.Transparency = 1
    game.Players.LocalPlayer.Character.RightUpperLeg.Transparency = 1
    game.Players.LocalPlayer.Character.RightLowerLeg.Transparency = 1
    game.Players.LocalPlayer.Character.LeftUpperLeg.Transparency = 1
    game.Players.LocalPlayer.Character.LeftLowerLeg.Transparency = 1
    game.Players.LocalPlayer.Character.LeftFoot.Transparency = 1
    game.Players.LocalPlayer.Character.RightFoot.Transparency = 1
    
    game.Players.LocalPlayer.Character.Animate:Destroy()
    game.Players.LocalPlayer.Character.Head.face.Transparency = 1
    game.Players.LocalPlayer.Character.LowerTorso.TextureID = "rbxassetid://6136089880"
    game.Players.LocalPlayer.Character.LowerTorso.MeshId = "rbxassetid://6136089733"
    game.Players.LocalPlayer.Character.LowerTorso.Size = Vector3.new(0.3, 0.05, 0.15)
    
    	local function inTable(What, Table)
		for Index, Value in pairs(Table) do
			if What == Value then
				return true
			end
		end
		return false
	end

	local removingClasses = {
		"Accessory",
		"Pants",
		"Shirt",
	}

	for _, Instance in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
		if inTable(Instance.ClassName, removingClasses) or Instance.Name == "face" then
			Instance:Destroy()
		end
	end

    for i,v in next, game:GetService('Players').LocalPlayer.Character:GetChildren() do
       if v:IsA('Accessory') then
           v:Destroy()
       end
    end
end})
m1:button({name = "Korblox(cs)",callback = function()
    local ply = game.Players.LocalPlayer
	local chr = ply.Character
	chr.RightLowerLeg.MeshId = "902942093"
	chr.RightLowerLeg.Transparency = "1"
	chr.RightUpperLeg.MeshId = "http://www.roblox.com/asset/?id=902942096"
	chr.RightUpperLeg.TextureID = "http://roblox.com/asset/?id=902843398"
	chr.RightFoot.MeshId = "902942089"
	chr.RightFoot.Transparency = "1"
end})
m1:button({name = "Headless(cs)",callback = function()
    game.Players.LocalPlayer.Character.Head.Transparency = 1
	game.Players.LocalPlayer.Character.Head.Transparency = 1
	for i,v in pairs(game.Players.LocalPlayer.Character.Head:GetChildren()) do
		if (v:IsA("Decal")) then
			v.Transparency = 1
		end
	end
end})
m1:button({name = "Wood(cs)",callback = function()
                                          local Face = game.Players.LocalPlayer.Character.Head.face.Texture
    local Mesh = game.Players.LocalPlayer.Character.LowerTorso.MeshId
    local Size = game.Players.LocalPlayer.Character.LowerTorso.Size
    
    game.Players.LocalPlayer.Character.LeftHand.Transparency = 1
    game.Players.LocalPlayer.Character.RightHand.Transparency = 1
    game.Players.LocalPlayer.Character.RightUpperArm.Transparency = 1
    game.Players.LocalPlayer.Character.RightLowerArm.Transparency = 1
    game.Players.LocalPlayer.Character.LeftUpperArm.Transparency = 1
    game.Players.LocalPlayer.Character.LeftLowerArm.Transparency = 1
    game.Players.LocalPlayer.Character.UpperTorso.Transparency = 1
    game.Players.LocalPlayer.Character.Head.Transparency = 1
    game.Players.LocalPlayer.Character.RightUpperLeg.Transparency = 1
    game.Players.LocalPlayer.Character.RightLowerLeg.Transparency = 1
    game.Players.LocalPlayer.Character.LeftUpperLeg.Transparency = 1
    game.Players.LocalPlayer.Character.LeftLowerLeg.Transparency = 1
    game.Players.LocalPlayer.Character.LeftFoot.Transparency = 1
    game.Players.LocalPlayer.Character.RightFoot.Transparency = 1
    
    game.Players.LocalPlayer.Character.Animate:Destroy()
    game.Players.LocalPlayer.Character.Head.face.Transparency = 1
    game.Players.LocalPlayer.Character.LowerTorso.TextureID = "rbxassetid://11835991067"
    game.Players.LocalPlayer.Character.LowerTorso.MeshId = "rbxassetid://11835983505"
    game.Players.LocalPlayer.Character.LowerTorso.Size = Vector3.new(0.3, 0.05, 0.15)
    
        	local function inTable(What, Table)
		for Index, Value in pairs(Table) do
			if What == Value then
				return true
			end
		end
		return false
	end

	local removingClasses = {
		"Accessory",
		"Pants",
		"Shirt",
	}

	for _, Instance in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
		if inTable(Instance.ClassName, removingClasses) or Instance.Name == "face" then
			Instance:Destroy()
		end
	end

    for i,v in next, game:GetService('Players').LocalPlayer.Character:GetChildren() do
       if v:IsA('Accessory') then
           v:Destroy()
       end
    end
end})

























--misc2--------
m2:button({name = "No Jump-Cooldown",callback = function()
     if not game.IsLoaded(game) then
   game.Loaded.Wait(game.Loaded);
end

-- variables
local IsA = game.IsA;
local newindex = nil

-- main hook
newindex = hookmetamethod(game, "__newindex", function(self, Index, Value)
   if not checkcaller() and IsA(self, "Humanoid") and Index == "JumpPower" then
       return
   end
   
   return newindex(self, Index, Value);
end)
end})
m2:button({name = "Fly(x)",callback = function()
     local plr = game.Players.LocalPlayer
local mouse = plr:GetMouse()

localplayer = plr

if workspace:FindFirstChild("Core") then
workspace.Core:Destroy()
end

local Core = Instance.new("Part")
Core.Name = "Core"
Core.Size = Vector3.new(0.05, 0.05, 0.05)

spawn(function()
Core.Parent = workspace
local Weld = Instance.new("Weld", Core)
Weld.Part0 = Core
Weld.Part1 = localplayer.Character.LowerTorso
Weld.C0 = CFrame.new(0, 0, 0)
end)

workspace:WaitForChild("Core")

local torso = workspace.Core
flying = true
local speed=10
local keys={a=false,d=false,w=false,s=false}
local e1
local e2
local function start()
local pos = Instance.new("BodyPosition",torso)
local gyro = Instance.new("BodyGyro",torso)
pos.Name="EPIXPOS"
pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
pos.position = torso.Position
gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
gyro.cframe = torso.CFrame
repeat
wait()
localplayer.Character.Humanoid.PlatformStand=true
local new=gyro.cframe - gyro.cframe.p + pos.position
if not keys.w and not keys.s and not keys.a and not keys.d then
speed=5
end
if keys.w then
new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
speed=speed+0
end
if keys.s then
new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
speed=speed+0
end
if keys.d then
new = new * CFrame.new(speed,0,0)
speed=speed+0
end
if keys.a then
new = new * CFrame.new(-speed,0,0)
speed=speed+0
end
if speed>10 then
speed=20
end
pos.position=new.p
if keys.w then
gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(-math.rad(speed*0),0,0)
elseif keys.s then
gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(math.rad(speed*0),0,0)
else
gyro.cframe = workspace.CurrentCamera.CoordinateFrame
end
until flying == false
if gyro then gyro:Destroy() end
if pos then pos:Destroy() end
flying=false
localplayer.Character.Humanoid.PlatformStand=false
speed=20
end
e1=mouse.KeyDown:connect(function(key)
if not torso or not torso.Parent then flying=false e1:disconnect() e2:disconnect() return end
if key=="w" then
keys.w=true
elseif key=="s" then
keys.s=true
elseif key=="a" then
keys.a=true
elseif key=="d" then
keys.d=true
elseif key=="x" then
if flying==true then
flying=false
else
flying=true
start()
end
end
end)
e2=mouse.KeyUp:connect(function(key)
if key=="w" then
keys.w=false
elseif key=="s" then
keys.s=false
elseif key=="a" then
keys.a=false
elseif key=="d" then
keys.d=false
end
end)
start()
end})










--fdsfds
m3:textbox({name = "Input User (Case Sensitive)",def = "",placeholder = "Enter User",callback = function(pl)
   getgenv().Zenaki = pl
end})
m3:button({name = "Teleport",callback = function()
     local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
local humanoid = game.Players.LocalPlayer.Character.Humanoid
humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
wait(0.1)
pl.CFrame = game.Players[getgenv().Zenaki].Character.HumanoidRootPart.CFrame
end})
